set(default_build_type "Release")
if(EXISTS "${CMAKE_SOURCE_DIR}/.git")
    set(default_build_type "Debug")
endif()

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    message(STATUS "Setting build type to '${default_build_type}' as none was specified.")
    set(CMAKE_BUILD_TYPE "${default_build_type}" CACHE STRING "Choose the type of build." FORCE)
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

if(CMAKE_BUILD_TYPE MATCHES ^Release$)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
    set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -O3 -flto")
elseif(CMAKE_BUILD_TYPE MATCHES ^Debug$)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O0")
    set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -g -O0")
elseif(CMAKE_BUILD_TYPE MATCHES ^MinSizeRel$)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Oz")
    set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Oz -flto")
elseif(CMAKE_BUILD_TYPE MATCHES ^RelWithDebInfo$)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O2")
    set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -g -O2")
else()
    message(FATAL_ERROR "Invalid build type " ${CMAKE_BUILD_TYPE})
endif()